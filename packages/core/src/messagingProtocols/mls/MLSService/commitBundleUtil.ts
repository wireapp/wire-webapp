/*
 * Wire
 * Copyright (C) 2022 Wire Swiss GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses/.
 *
 */

import {mls} from '@wireapp/protocol-messaging/web/mls';

import {CommitBundle, GroupInfoEncryptionType, RatchetTreeType} from '@wireapp/core-crypto';

const ratchetTreeMapping: Record<RatchetTreeType, mls.RatchetTreeType> = {
  [RatchetTreeType.Full]: mls.RatchetTreeType.FULL,
  [RatchetTreeType.ByRef]: mls.RatchetTreeType.REFERENCE,
  [RatchetTreeType.Delta]: mls.RatchetTreeType.DELTA,
};
const groupInfoType: Record<GroupInfoEncryptionType, mls.GroupInfoType> = {
  [GroupInfoEncryptionType.Plaintext]: mls.GroupInfoType.PUBLIC_GROUP_STATE,
  [GroupInfoEncryptionType.JweEncrypted]: mls.GroupInfoType.GROUP_INFO_JWE,
};

/**
 * Will convert a coreCrypto commit bundle into a Uint8Array representing a protobuf object
 * @param commitBundle a commit bundle generated by coreCrypto
 * @returns
 */
export function toProtobufCommitBundle({commit, welcome, groupInfo}: CommitBundle): Uint8Array {
  const {ratchetTreeType, encryptionType} = groupInfo;
  return mls.CommitBundle.encode({
    groupInfoBundle: {
      ratchetTreeType: ratchetTreeMapping[ratchetTreeType],
      groupInfo: groupInfo.payload,
      groupInfoType: groupInfoType[encryptionType],
    },
    commit,
    welcome,
  }).finish();
}
