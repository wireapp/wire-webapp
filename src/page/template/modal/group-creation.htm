<div id="group-creation-modal" data-bind="with: $root.groupCreation" class="group-creation__modal">
  <modal-dialog params="isShown: isShown, onClosed: afterHideModal, ariaLabelBy: 'group-creation-label'">
    <div class="modal__header modal__header--list">
      <!-- ko if: stateIsParticipants() -->
        <button class="button-reset-default" type="button" data-bind="click: clickOnBack, attr: { 'aria-label': t('accessibility.groupCreationParticipantsActionBack')}" data-uie-name="go-back"><arrow-left-icon aria-hidden="true" class="modal__header__button"></arrow-left-icon></button>
        <h2 id="group-creation-label" class="modal__header__title" data-bind="text: participantsHeaderText" data-uie-name="status-people-selected"></h2>
        <button class="group-creation__action enabled accent-text" type="button" data-bind="click: clickOnCreate, text: participantsActionText, attr: { 'aria-label': participantsActionText }" data-uie-name="do-create-group"></button>
      <!-- /ko -->
      <!-- ko if: stateIsPreferences() -->
        <button class="button-reset-default" type="button" data-bind="click: clickOnClose, attr: { 'aria-label': t('accessibility.groupCreationActionCloseModal')}" data-uie-name="do-close"><close-icon aria-hidden="true" class="modal__header__button"></close-icon></button>
        <h2 id="group-creation-label" class="modal__header__title" data-bind="text: t('groupCreationPreferencesHeader')"></h2>
        <button id="group-go-next" class="group-creation__action" type="button" data-bind="click: clickOnNext, css: {'accent-text': nameInput().length, 'enabled': nameInput().length}, enable: nameInput().length, text: t('groupCreationPreferencesAction'), attr: { 'aria-label': t('groupCreationPreferencesAction'), 'disabled': !nameInput().length }" data-uie-name="go-next"></button>
      <!-- /ko -->
    </div>
    <!-- ko if: stateIsParticipants() -->
      <user-input class="modal-style" params="
        input: participantsInput,
        setInput: value => participantsInput(value),
        selectedUsers: selectedContacts,
        setSelectedUsers: (users) => selectedContacts(users),
        placeholder: t('groupCreationParticipantsPlaceholder'),
        enter: clickOnCreate" spellcheck="false"></user-input>
    <!-- /ko -->
      <!-- ko if: stateIsParticipants() -->
        <div class="group-creation__list" data-bind="fadingscrollbar">
          <!-- ko if: contacts().length -->
            <user-list class="group-creation-modal-participants-list user-list-light" params="  
              observables: {users: contacts, filter: participantsInput, selected: selectedContacts},
              searchRepository: searchRepository,
              teamRepository: teamRepository,
              conversationRepository: conversationRepository,
              noUnderline: true
            "></user-list>
          <!-- /ko -->
        </div>
      <!-- /ko -->
      <!-- ko if: stateIsPreferences() -->
        <div class="modal-input-wrapper">
          <input class="modal__input"
          autocomplete="off" required spellcheck="false" type="text"
          data-bind="attr: {maxlength: maxNameLength, placeholder: t('groupCreationPreferencesPlaceholder')}, enter: clickOnNext, hasFocus: true, textInput: nameInput"
          data-uie-name="enter-group-name" />
          <div class="group-creation__error" data-bind="text: nameError, visible: nameError().length" data-uie-name="error-group-name"></div>
        </div>
        <!-- ko if: isTeam -->
        <div class="modal__info" data-bind="text: t('groupSizeInfo', maxSize)" data-uie-name="status-group-size-info"></div>
        <base-toggle class="modal-style"
        params="isChecked: isGuestEnabled(), setIsChecked: clickOnToggleGuestMode, extendedInfo: true, extendedInfoText: t('guestRoomToggleInfoExtended'), infoText: t('guestRoomToggleInfo'), toggleName: t('guestOptionsTitle')"
      ></base-toggle>
        <base-toggle class="modal-style"
        params="isChecked: isServicesEnabled(), setIsChecked: clickOnToggleServicesMode, extendedInfo: true, extendedInfoText: t('servicesRoomToggleInfoExtended'), infoText: t('servicesRoomToggleInfo'), toggleName: t('servicesOptionsTitle')"
      ></base-toggle>
        <info-toggle class="modal-style" params="
          dataUieName: 'read-receipts',
          info: t('readReceiptsToogleInfo'),
          isChecked: enableReadReceipts,
          setIsChecked: (checked) => enableReadReceipts(checked),
          isDisabled: false,
          name: t('readReceiptsToogleName')
        "></info-toggle>
        <!-- /ko -->
      <!-- /ko -->
  </modal-dialog>
</div>