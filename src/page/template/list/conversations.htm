<div id="conversations" class="conversations left-list-is-visible" data-bind="with: $root.conversations">
  <div class="left-list-header">
    <settings-icon
      class="conversations-settings button-icon-large accent-text"
      data-bind="clickOrDrag: clickOnPreferencesButton, attr: {title: t('tooltipConversationsPreferences')}, css: {'conversations-settings--badge': showBadge()}"
      data-uie-name="go-preferences"
    ></settings-icon>
    <!-- ko if: isTeam() -->
    <availability-state
      class="left-list-header-availability"
      data-bind="clickOrDrag: clickOnAvailability"
      params="availability: selfAvailability, label: selfUserName, dataUieName: 'status-availability'"
    >
    </availability-state>
      <!-- ko if: isOnLegalHold() || hasPendingLegalHold() -->
      <legal-hold-dot
        style="padding: 8px;"
        params="legalHoldModal: contentViewModel.legalHoldModal, isPending: hasPendingLegalHold()"
        data-bind="attr: {'data-uie-name': hasPendingLegalHold() ? 'status-legal-hold-pending' : 'status-legal-hold'}"
      >
      </legal-hold-dot>
      <!-- /ko -->
    <!-- /ko -->
    <!-- ko ifnot: isTeam() -->
    <span class="left-list-header-text" data-bind="text: selfUserName" data-uie-name="status-name"></span>
    <!-- /ko -->
  </div>
  <!-- ko using: callingViewModel -->
    <!-- ko foreach: {data: activeCalls, as: 'activeCall', noChildContext: true} -->
      <!-- ko if: !activeCall.reason() -->
        <conversation-list-calling-cell
          data-bind="attr: {'data-uie-uid': $data.id, 'data-uie-value': getConversationById(activeCall.conversationId).display_name}"
          params="
            call: activeCall,
            videoSpeakersActiveTab: videoSpeakersActiveTab,
            videoGrid: getVideoGrid(activeCall),
            conversation: getConversationById(activeCall.conversationId),
            multitasking: multitasking,
            callingRepository: callingRepository,
            maximizedTileVideoParticipant: maximizedTileVideoParticipant,
            teamRepository: teamRepository,
            callActions: callActions,
            hasAccessToCamera: hasAccessToCamera(),
            isSelfVerified: isSelfVerified"
          data-uie-name="item-call">
        </conversation-list-calling-cell>
      <!-- /ko -->
    <!-- /ko -->
  <!-- /ko -->
  <div class="left-list-center">
    <!-- ko if: unarchivedConversations().length > 0 || showConnectRequests() -->
    <ul
      class="left-list-items conversation-list"
      data-bind="antiscroll: shouldUpdateScrollbar, bordered_list: unarchivedConversations"
    >
      <!-- ko if: showConnectRequests() -->
      <li
        class="conversation-list-cell"
        data-bind="click: clickOnConnectRequests, css: {'conversation-list-cell-active': stateIsRequests()}"
      >
        <div class="conversation-list-cell-left">
          <!-- ko if: connectRequests().length === 1 -->
          <div class="avatar-halo">
            <participant-avatar params="participant: connectRequests()[0], size: participantAvatarSize">
            </participant-avatar>
          </div>
          <!-- /ko -->

          <!-- ko if: connectRequests().length > 1 -->
          <group-avatar params="users: connectRequests()"></group-avatar>
          <!-- /ko -->
        </div>

        <div class="conversation-list-cell-center">
          <span
            class="conversation-list-cell-name"
            data-bind="text: connectRequestsText, css: {'accent-text': stateIsRequests()}"
            data-uie-name="item-pending-requests"
          ></span>
        </div>

        <div class="conversation-list-cell-right">
          <span class="conversation-list-cell-badge cell-badge-dark icon-pending" data-uie-name="status-pending"></span>
        </div>
      </li>
      <!-- /ko -->
      <!-- ko let: {isVisibleFunc: getIsVisibleFunc()} -->
      <div data-uie-name="recent-view" data-bind="visible: showRecentConversations()">
        <!-- ko foreach: {data: unarchivedConversations, as: 'conversation', noChildContext: true} -->
        <conversation-list-cell
          data-bind="link_to: getConversationUrl(conversation.id), event: {'contextmenu': (_, event) => listViewModel.onContextMenu(conversation, event)}"
          data-uie-name="item-conversation"
          params="rightClick: (_, event) => listViewModel.onContextMenu(conversation, event), conversation: conversation, showJoinButton: hasJoinableCall(conversation.id), is_selected: isSelectedConversation, onJoinCall: onJoinCall, index: $index, isVisibleFunc: isVisibleFunc"
        >
        </conversation-list-cell>
        <!-- /ko -->
      </div>
      <div data-uie-name="folder-view" data-bind="hidden: showRecentConversations()">
        <grouped-conversations
          params="
              conversationRepository: conversationRepository,
              listViewModel: listViewModel,
              hasJoinableCall: hasJoinableCall,
              onJoinCall: onJoinCall,
              isSelectedConversation: isSelectedConversation,
              expandedFolders: expandedFoldersIds,
              isVisibleFunc: isVisibleFunc"
        >
        </grouped-conversations>
      </div>
      <!-- /ko -->
    </ul>
    <!-- /ko -->
    <!-- ko if: noConversations() -->
      <!-- ko if: archivedConversations().length === 0 -->
      <div class="conversations-hint" data-uie-name="status-start-conversation-hint">
        <div class="conversations-hint-text" data-bind="text: t('conversationsNoConversations')"></div>
        <arrow-down-long-icon class="conversations-hint-arrow"></arrow-down-long-icon>
      </div>
      <!-- /ko -->
      <!-- ko if: archivedConversations().length > 0 -->
      <div class="conversations-all-archived" data-bind="text: t('conversationsAllArchived')"></div>
      <!-- /ko -->
    <!-- /ko -->
  </div>
  <div class="conversations-footer">
    <people-icon
      class="button-icon-large"
      data-bind="attr: {title: startTooltip}, click: clickOnPeopleButton"
      data-uie-name="go-people"
    ></people-icon>
    <conversations-recent-icon
      class="button-icon-large"
      data-uie-name="go-recent-view"
      data-bind="attr: {title: conversationsTooltip, 'data-uie-status': showRecentConversations() ? 'active' : 'inactive'}, css: {'accent-fill': showRecentConversations()}, click: () => showRecentConversations(true)"
    >
    </conversations-recent-icon>
    <conversations-folder-icon
      class="button-icon-large"
      data-uie-name="go-folder-view"
      data-bind="attr: {title: foldersTooltip, 'data-uie-status': showRecentConversations() ? 'inactive' : 'active'}, css: {'accent-fill': !showRecentConversations()}, click: () => showRecentConversations(false)"
    >
    </conversations-folder-icon>
    <!-- ko if: archivedConversations().length > 0 -->
    <archive-icon
      class="button-icon-large"
      data-bind="attr: {title: archiveTooltip}, click: clickOnArchivedButton"
      data-uie-name="go-archive"
    ></archive-icon>
    <!-- /ko -->
  </div>
</div>
